ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           i
2       10      Delimiter           ,
2       12      Identifer           j
2       14      Delimiter           :
2       16      Identifer           INTEGER
2       24      Operator            :=
2       27      Integer             1
2       28      Delimiter           ;
3       5       Keyword             VAR
3       9       Identifer           x
3       11      Delimiter           :
3       13      Identifer           REAL
3       18      Operator            :=
3       21      Real                2.0
3       24      Delimiter           ;
4       5       Keyword             VAR
4       9       Identifer           y
4       11      Delimiter           :
4       13      Identifer           REAL
4       18      Operator            :=
4       21      Real                3.0
4       24      Delimiter           ;
5       1       Keyword             BEGIN
6       5       Keyword             WRITE
6       11      Delimiter           (
6       12      String              "i = "
6       18      Delimiter           ,
6       20      Identifer           i
6       21      Delimiter           ,
6       23      String              ", j = "
6       31      Delimiter           ,
6       33      Identifer           j
6       34      Delimiter           )
6       35      Delimiter           ;
7       5       Keyword             WRITE
7       11      Delimiter           (
7       12      String              "x = "
7       18      Delimiter           ,
7       20      Identifer           x
7       21      Delimiter           ,
7       23      String              ", y = "
7       31      Delimiter           ,
7       33      Identifer           y
7       34      Delimiter           )
7       35      Delimiter           ;
8       1       Keyword             END
8       4       Delimiter           ;

Number of tokens: 50
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           A
2       10      Delimiter           ,
2       12      Identifer           B
2       14      Delimiter           :
2       16      Identifer           REAL
2       21      Operator            :=
2       24      Real                0.0
2       27      Delimiter           ;
3       5       Identifer           C
3       7       Delimiter           :
3       9       Identifer           REAL
3       14      Operator            :=
3       17      Real                0.0
3       20      Delimiter           ;
4       1       Keyword             BEGIN
5       5       Keyword             WRITE
5       11      Delimiter           (
5       12      String              "ENTER TWO REALS:"
5       30      Delimiter           )
5       31      Delimiter           ;
6       5       Keyword             READ
6       10      Delimiter           (
6       11      Identifer           A
6       12      Delimiter           ,
6       14      Identifer           B
6       15      Delimiter           )
6       16      Delimiter           ;
7       5       Identifer           C
7       7       Operator            :=
7       10      Real                8.0
7       13      Delimiter           ;
8       5       Keyword             WRITE
8       11      Delimiter           (
8       12      String              "A="
8       16      Delimiter           ,
8       18      Identifer           A
8       19      Delimiter           ,
8       21      String              ", B="
8       27      Delimiter           ,
8       29      Identifer           B
8       30      Delimiter           ,
8       32      String              ", C="
8       38      Delimiter           ,
8       40      Identifer           C
8       41      Delimiter           )
8       42      Delimiter           ;
9       5       Identifer           C
9       7       Operator            :=
9       10      Identifer           A
9       12      Operator            -
9       14      Delimiter           (
9       15      Operator            -
9       16      Identifer           B
9       17      Delimiter           )
9       19      Operator            +
9       21      Identifer           C
9       22      Delimiter           ;
10      5       Identifer           C
10      7       Operator            :=
10      10      Identifer           C
10      12      Operator            +
10      14      Identifer           A
10      16      Operator            *
10      18      Delimiter           (
10      19      Integer             3
10      21      Operator            +
10      23      Integer             5
10      25      Operator            *
10      27      Integer             2
10      28      Delimiter           )
10      29      Delimiter           ;
11      5       Keyword             WRITE
11      11      Delimiter           (
11      13      Operator            -
11      14      Identifer           C
11      16      Operator            /
11      17      Delimiter           (
11      18      Identifer           A
11      20      Operator            +
11      22      Integer             1
11      23      Delimiter           )
11      24      Delimiter           )
11      25      Delimiter           ;
12      1       Keyword             END
12      4       Delimiter           ;

Number of tokens: 88
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           A
2       10      Delimiter           ,
2       12      Identifer           B
2       14      Delimiter           :
2       16      Identifer           REAL
2       21      Operator            :=
2       24      Real                0.0
2       27      Delimiter           ;
3       5       Keyword             VAR
3       9       Identifer           I
3       10      Delimiter           ,
3       12      Identifer           J
3       14      Delimiter           :
3       16      Identifer           INTEGER
3       24      Operator            :=
3       27      Integer             0
3       28      Delimiter           ;
4       1       Keyword             BEGIN
5       5       Identifer           A
5       7       Operator            :=
5       10      Real                5.0
5       13      Delimiter           ;
6       5       Identifer           I
6       7       Operator            :=
6       10      Operator            -
6       11      Integer             3
6       12      Delimiter           ;
7       5       Identifer           J
7       7       Operator            :=
7       10      Identifer           I
7       12      Operator            *
7       14      Integer             10
7       16      Delimiter           ;
8       5       Identifer           B
8       7       Operator            :=
8       10      Identifer           A
8       12      Operator            +
8       14      Identifer           I
8       15      Delimiter           ;
9       5       Identifer           A
9       7       Operator            :=
9       10      Identifer           J
9       12      Operator            /
9       14      Identifer           B
9       15      Delimiter           ;
10      5       Identifer           J
10      7       Operator            :=
10      10      Identifer           I
10      12      Operator            -
10      14      Identifer           J
10      15      Delimiter           ;
11      5       Identifer           I
11      7       Operator            :=
11      10      Identifer           J
11      12      Operator            /
11      14      Identifer           I
11      15      Delimiter           ;
11      18      Comment             (* erroneous *)
12      5       Identifer           B
12      7       Operator            :=
12      10      Identifer           I
12      12      Operator            -
12      14      Identifer           B
12      15      Delimiter           ;
13      5       Keyword             WRITE
13      11      Delimiter           (
13      13      String              " A = "
13      20      Delimiter           ,
13      22      Operator            -
13      23      Identifer           A
13      24      Delimiter           ,
13      26      String              " | B = "
13      35      Delimiter           ,
13      37      Identifer           B
13      38      Delimiter           )
13      39      Delimiter           ;
14      5       Keyword             WRITE
14      11      Delimiter           (
14      13      String              ""
14      16      Delimiter           )
14      17      Delimiter           ;
15      5       Keyword             WRITE
15      11      Delimiter           (
15      13      String              " I = "
15      20      Delimiter           ,
15      22      Identifer           I
15      23      Delimiter           ,
15      25      String              " |  J = "
15      35      Delimiter           ,
15      37      Identifer           J
15      39      Delimiter           )
15      40      Delimiter           ;
16      5       Comment             (* PRINT "1.50E01 -1.10E01 -9 -27" *)
17      1       Keyword             END
17      4       Delimiter           ;

Number of tokens: 96
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           I
2       11      Delimiter           :
2       13      Identifer           INTEGER
2       21      Operator            :=
2       24      Integer             0
2       25      Delimiter           ;
3       5       Keyword             TYPE
3       10      Identifer           COMPLEX
3       18      Keyword             IS
3       21      Keyword             RECORD
3       28      Identifer           R
3       29      Delimiter           :
3       31      Identifer           REAL
3       35      Delimiter           ;
3       37      Identifer           I
3       39      Delimiter           :
3       41      Identifer           REAL
3       45      Delimiter           ;
3       47      Keyword             END
3       50      Delimiter           ;
4       5       Keyword             TYPE
4       10      Identifer           PAIR
4       15      Keyword             IS
4       18      Keyword             RECORD
4       25      Identifer           FIRST
4       30      Delimiter           :
4       32      Identifer           COMPLEX
4       39      Delimiter           ;
4       41      Identifer           SECOND
4       48      Delimiter           :
4       50      Identifer           COMPLEX
4       57      Delimiter           ;
4       59      Keyword             END
4       62      Delimiter           ;
5       5       Keyword             VAR
5       9       Identifer           C
5       11      Delimiter           :
5       13      Identifer           COMPLEX
5       21      Operator            :=
5       24      Identifer           COMPLEX
5       32      Delimiter           {
5       34      Identifer           R
5       36      Operator            :=
5       39      Real                0.0
5       42      Delimiter           ;
5       44      Identifer           I
5       46      Operator            :=
5       49      Real                0.0
5       53      Delimiter           }
5       54      Delimiter           ;
6       5       Keyword             VAR
6       9       Identifer           P
6       11      Delimiter           :
6       13      Identifer           PAIR
6       18      Operator            :=
6       21      Identifer           PAIR
6       26      Delimiter           {
6       28      Identifer           FIRST
6       34      Operator            :=
6       37      Identifer           COMPLEX
6       45      Delimiter           {
6       47      Identifer           R
6       49      Operator            :=
6       52      Real                0.0
6       55      Delimiter           ;
6       57      Identifer           I
6       59      Operator            :=
6       62      Real                0.0
6       66      Delimiter           }
6       67      Delimiter           ;
7       28      Identifer           SECOND
7       35      Operator            :=
7       38      Identifer           COMPLEX
7       46      Delimiter           {
7       48      Identifer           R
7       50      Operator            :=
7       53      Real                0.0
7       56      Delimiter           ;
7       58      Identifer           I
7       60      Operator            :=
7       63      Real                0.0
7       67      Delimiter           }
7       69      Delimiter           }
7       70      Delimiter           ;
8       5       Keyword             PROCEDURE
8       15      Identifer           PRINT
8       20      Delimiter           (
8       21      Delimiter           )
8       23      Keyword             IS
8       26      Keyword             BEGIN
9       2       Keyword             WRITE
9       7       Delimiter           (
9       8       String              "    ("
9       15      Delimiter           ,
9       17      Identifer           C
9       18      Delimiter           .
9       19      Identifer           R
9       20      Delimiter           ,
9       22      String              ", "
9       26      Delimiter           ,
9       28      Identifer           C
9       29      Delimiter           .
9       30      Identifer           I
9       31      Delimiter           ,
9       33      String              ")"
9       36      Delimiter           )
9       37      Delimiter           ;
10      5       Keyword             END
10      8       Delimiter           ;
11      1       Keyword             BEGIN
12      5       Identifer           C
12      6       Delimiter           .
12      7       Identifer           R
12      9       Operator            :=
12      12      Real                1.0
12      15      Delimiter           ;
13      5       Identifer           C
13      6       Delimiter           .
13      7       Identifer           I
13      9       Operator            :=
13      12      Real                0.0
13      15      Delimiter           ;
14      5       Identifer           P
14      6       Delimiter           .
14      7       Identifer           FIRST
14      13      Operator            :=
14      16      Identifer           C
14      17      Delimiter           ;
15      5       Identifer           C
15      6       Delimiter           .
15      7       Identifer           R
15      9       Operator            :=
15      12      Real                0.0
15      15      Delimiter           ;
16      5       Identifer           C
16      6       Delimiter           .
16      7       Identifer           I
16      9       Operator            :=
16      12      Real                1.0
16      15      Delimiter           ;
17      5       Identifer           P
17      6       Delimiter           .
17      7       Identifer           SECOND
17      14      Operator            :=
17      17      Identifer           C
17      18      Delimiter           ;
18      5       Identifer           C
18      7       Operator            :=
18      10      Identifer           P
18      11      Delimiter           .
18      12      Identifer           FIRST
18      17      Delimiter           ;
19      5       Keyword             WRITE
19      11      Delimiter           (
19      12      String              "The first complex number should be (1.0, 0.0):"
19      60      Delimiter           )
19      61      Delimiter           ;
20      5       Identifer           PRINT
20      10      Delimiter           (
20      11      Delimiter           )
20      12      Delimiter           ;
21      5       Identifer           C
21      7       Operator            :=
21      10      Identifer           P
21      11      Delimiter           .
21      12      Identifer           SECOND
21      18      Delimiter           ;
22      5       Keyword             WRITE
22      11      Delimiter           (
22      12      String              "The second complex number should be (0.0, 1.0):"
22      61      Delimiter           )
22      62      Delimiter           ;
23      5       Identifer           PRINT
23      10      Delimiter           (
23      11      Delimiter           )
23      12      Delimiter           ;
24      5       Keyword             IF
24      8       Identifer           P
24      9       Delimiter           .
24      10      Identifer           FIRST
24      15      Delimiter           .
24      16      Identifer           R
24      18      Operator            <>
24      21      Identifer           P
24      22      Delimiter           .
24      23      Identifer           SECOND
24      29      Delimiter           .
24      30      Identifer           R
24      32      Keyword             THEN
25      2       Keyword             WRITE
25      8       Delimiter           (
25      9       String              "and these two complex numbers are not equal!"
25      55      Delimiter           )
25      56      Delimiter           ;
26      5       Keyword             ELSIF
26      11      Identifer           P
26      12      Delimiter           .
26      13      Identifer           FIRST
26      18      Delimiter           .
26      19      Identifer           I
26      21      Operator            <>
26      24      Identifer           P
26      25      Delimiter           .
26      26      Identifer           SECOND
26      32      Delimiter           .
26      33      Identifer           I
26      35      Keyword             THEN
27      2       Keyword             WRITE
27      8       Delimiter           (
27      9       String              "and these two complex numbers are not equal!"
27      55      Delimiter           )
27      56      Delimiter           ;
28      5       Keyword             ELSE
29      2       Keyword             WRITE
29      8       Delimiter           (
29      9       String              "and these two complex numbers are equal?"
29      51      Delimiter           )
29      52      Delimiter           ;
30      5       Keyword             END
30      8       Delimiter           ;
31      1       Keyword             END
31      4       Delimiter           ;

Number of tokens: 225
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           I
2       10      Delimiter           ,
2       11      Identifer           J
2       13      Delimiter           :
2       15      Identifer           INTEGER
2       23      Operator            :=
2       26      Integer             0
2       27      Delimiter           ;
3       1       Keyword             BEGIN
4       2       Keyword             WRITE
4       7       Delimiter           (
4       8       String              "Ascending loop:"
4       25      Delimiter           )
4       26      Delimiter           ;
5       2       Keyword             FOR
5       6       Identifer           I
5       8       Operator            :=
5       11      Integer             1
5       13      Keyword             TO
5       16      Integer             5
5       18      Keyword             DO
6       4       Keyword             WRITE
6       9       Delimiter           (
6       10      String              "I = "
6       16      Delimiter           ,
6       18      Identifer           I
6       19      Delimiter           )
6       20      Delimiter           ;
7       9       Keyword             END
7       12      Delimiter           ;
8       2       Keyword             WRITE
8       7       Delimiter           (
8       8       String              "Descending loop:"
8       26      Delimiter           )
8       27      Delimiter           ;
9       2       Keyword             FOR
9       6       Identifer           I
9       8       Operator            :=
9       11      Integer             5
9       13      Keyword             TO
9       16      Integer             1
9       18      Keyword             BY
9       21      Operator            -
9       22      Integer             1
9       24      Keyword             DO
10      4       Keyword             WRITE
10      9       Delimiter           (
10      10      String              "I = "
10      16      Delimiter           ,
10      18      Identifer           I
10      19      Delimiter           )
10      20      Delimiter           ;
11      9       Keyword             END
11      12      Delimiter           ;
12      2       Keyword             WRITE
12      7       Delimiter           (
12      8       String              "Double loop:"
12      22      Delimiter           )
12      23      Delimiter           ;
13      2       Keyword             FOR
13      6       Identifer           I
13      8       Operator            :=
13      11      Integer             1
13      13      Keyword             TO
13      16      Integer             5
13      18      Keyword             DO
14      6       Keyword             FOR
14      10      Identifer           J
14      12      Operator            :=
14      15      Identifer           I
14      17      Keyword             TO
14      20      Identifer           I
14      21      Operator            +
14      22      Integer             10
14      25      Keyword             BY
14      28      Integer             2
14      30      Keyword             DO
15      8       Keyword             WRITE
15      13      Delimiter           (
15      14      String              "I,J = "
15      22      Delimiter           ,
15      24      Identifer           I
15      25      Delimiter           ,
15      27      String              ", "
15      31      Delimiter           ,
15      33      Identifer           J
15      34      Delimiter           )
15      35      Delimiter           ;
16      11      Keyword             END
16      14      Delimiter           ;
17      9       Keyword             END
17      12      Delimiter           ;
18      1       Keyword             END
18      4       Delimiter           ;

Number of tokens: 97
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             PROCEDURE
2       15      Identifer           FOO
2       18      Delimiter           (
2       19      Identifer           X
2       20      Delimiter           :
2       22      Identifer           INT
2       25      Delimiter           ;
2       27      Identifer           Y
2       28      Delimiter           :
2       30      Identifer           REAL
2       34      Delimiter           )
2       35      Delimiter           :
2       36      Identifer           REAL
2       41      Keyword             IS
3       7       Keyword             PROCEDURE
3       17      Identifer           BAR
3       20      Delimiter           (
3       21      Delimiter           )
3       23      Keyword             IS
3       26      Keyword             BEGIN
3       32      Identifer           Y
3       34      Operator            :=
3       37      Identifer           X
3       39      Operator            +
3       41      Real                1.0
3       44      Delimiter           ;
3       46      Keyword             END
3       49      Delimiter           ;
4       7       Keyword             BEGIN
5       9       Identifer           BAR
5       12      Delimiter           (
5       13      Delimiter           )
5       14      Delimiter           ;
6       2       Keyword             RETURN
6       9       Identifer           Y
6       10      Delimiter           ;
7       7       Keyword             END
7       10      Delimiter           ;
8       5       Keyword             VAR
8       9       Identifer           C
8       11      Delimiter           :
8       13      Identifer           REAL
8       18      Operator            :=
8       21      Integer             0
8       22      Delimiter           ;
9       1       Keyword             BEGIN
10      5       Identifer           C
10      7       Operator            :=
10      10      Identifer           FOO
10      13      Delimiter           (
10      14      Integer             3
10      15      Delimiter           ,
10      17      Real                2.0
10      20      Delimiter           )
10      21      Delimiter           ;
11      5       Keyword             WRITE
11      10      Delimiter           (
11      11      String              "C = "
11      17      Delimiter           ,
11      19      Identifer           C
11      20      Delimiter           ,
11      22      String              " (should be 4.0)"
11      40      Delimiter           )
11      41      Delimiter           ;
12      1       Keyword             END
12      4       Delimiter           ;

Number of tokens: 68
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           I
2       11      Delimiter           :
2       13      Identifer           INTEGER
2       21      Operator            :=
2       24      Integer             0
2       25      Delimiter           ;
3       5       Keyword             PROCEDURE
3       15      Identifer           ADDONE
3       21      Delimiter           (
3       22      Delimiter           )
3       24      Keyword             IS
3       27      Keyword             BEGIN
4       2       Identifer           I
4       4       Operator            :=
4       7       Identifer           I
4       9       Operator            +
4       11      Integer             1
4       12      Delimiter           ;
5       5       Keyword             END
5       8       Delimiter           ;
6       5       Keyword             PROCEDURE
6       15      Identifer           PASSTHEBUCK
6       26      Delimiter           (
6       27      Delimiter           )
6       29      Keyword             IS
6       32      Keyword             BEGIN
6       38      Identifer           ADDONE
6       44      Delimiter           (
6       45      Delimiter           )
6       46      Delimiter           ;
6       48      Keyword             END
6       51      Delimiter           ;
7       1       Keyword             BEGIN
8       5       Keyword             WRITE
8       10      Delimiter           (
8       11      String              "I = "
8       17      Delimiter           ,
8       19      Identifer           I
8       20      Delimiter           ,
8       22      String              " (SHOULD BE 0)"
8       38      Delimiter           )
8       39      Delimiter           ;
9       5       Identifer           PASSTHEBUCK
9       16      Delimiter           (
9       17      Delimiter           )
9       18      Delimiter           ;
10      5       Keyword             WRITE
10      10      Delimiter           (
10      11      String              "I = "
10      17      Delimiter           ,
10      19      Identifer           I
10      20      Delimiter           ,
10      22      String              " (SHOULD BE 1)"
10      38      Delimiter           )
10      39      Delimiter           ;
11      5       Keyword             WRITE
11      10      Delimiter           (
11      11      String              "ALL DONE!"
11      22      Delimiter           )
11      23      Delimiter           ;
12      1       Keyword             END
12      4       Delimiter           ;

Number of tokens: 65
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           I
2       11      Delimiter           :
2       13      Identifer           INTEGER
2       21      Operator            :=
2       24      Integer             0
2       25      Delimiter           ;
3       5       Keyword             PROCEDURE
3       15      Identifer           ADDONE
3       21      Delimiter           (
3       22      Delimiter           )
3       24      Keyword             IS
4       2       Keyword             VAR
4       6       Identifer           J
4       8       Delimiter           :
4       10      Identifer           INTEGER
4       18      Operator            :=
4       21      Integer             0
4       22      Delimiter           ;
5       2       Keyword             PROCEDURE
5       12      Identifer           OKAY
5       16      Delimiter           (
5       17      Delimiter           )
5       19      Keyword             IS
6       6       Keyword             VAR
6       10      Identifer           CONSTANT
6       19      Delimiter           :
6       21      Identifer           INTEGER
6       29      Operator            :=
6       32      Integer             0
6       33      Delimiter           ;
7       2       Keyword             BEGIN
8       6       Identifer           CONSTANT
8       15      Operator            :=
8       18      Integer             1
8       19      Delimiter           ;
9       6       Identifer           J
9       8       Operator            :=
9       11      Identifer           J
9       13      Operator            +
9       15      Identifer           CONSTANT
9       23      Delimiter           ;
10      2       Keyword             END
10      5       Delimiter           ;
11      5       Keyword             BEGIN
12      2       Identifer           J
12      4       Operator            :=
12      7       Identifer           I
12      8       Delimiter           ;
13      2       Identifer           OKAY
13      6       Delimiter           (
13      7       Delimiter           )
13      8       Delimiter           ;
14      2       Identifer           I
14      4       Operator            :=
14      7       Identifer           J
14      8       Delimiter           ;
15      5       Keyword             END
15      8       Delimiter           ;
16      1       Keyword             BEGIN
17      5       Identifer           I
17      7       Operator            :=
17      10      Integer             0
17      11      Delimiter           ;
18      5       Keyword             WRITE
18      10      Delimiter           (
18      11      String              "I = "
18      17      Delimiter           ,
18      19      Identifer           I
18      20      Delimiter           ,
18      22      String              " (SHOULD BE 0)"
18      38      Delimiter           )
18      39      Delimiter           ;
19      5       Identifer           ADDONE
19      11      Delimiter           (
19      12      Delimiter           )
19      13      Delimiter           ;
20      5       Keyword             WRITE
20      10      Delimiter           (
20      11      String              "I = "
20      17      Delimiter           ,
20      19      Identifer           I
20      20      Delimiter           ,
20      22      String              " (SHOULD BE 1)"
20      38      Delimiter           )
20      39      Delimiter           ;
21      5       Identifer           ADDONE
21      11      Delimiter           (
21      12      Delimiter           )
21      13      Delimiter           ;
22      5       Keyword             WRITE
22      10      Delimiter           (
22      11      String              "I = "
22      17      Delimiter           ,
22      19      Identifer           I
22      20      Delimiter           ,
22      22      String              " (SHOULD BE 2)"
22      38      Delimiter           )
22      39      Delimiter           ;
23      5       Keyword             WRITE
23      10      Delimiter           (
23      11      String              "ALL DONE!"
23      22      Delimiter           )
23      23      Delimiter           ;
24      1       Keyword             END
24      4       Delimiter           ;

Number of tokens: 108
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           I
2       10      Delimiter           ,
2       12      Identifer           J
2       13      Delimiter           ,
2       15      Identifer           ANSWER
2       22      Delimiter           :
2       24      Identifer           INTEGER
2       32      Operator            :=
2       35      Integer             0
2       36      Delimiter           ;
3       5       Keyword             PROCEDURE
3       15      Identifer           FACTORIAL
3       24      Delimiter           (
3       25      Delimiter           )
3       27      Keyword             IS
4       2       Keyword             PROCEDURE
5       11      Identifer           FACT
5       15      Delimiter           (
5       16      Delimiter           )
5       18      Keyword             IS
5       21      Keyword             BEGIN
6       6       Identifer           MULT
6       10      Delimiter           (
6       11      Delimiter           )
6       12      Delimiter           ;
7       6       Keyword             IF
7       9       Identifer           J
7       11      Operator            <>
7       14      Identifer           I
7       16      Keyword             THEN
7       21      Identifer           J
7       23      Operator            :=
7       26      Identifer           J
7       28      Operator            +
7       30      Integer             1
7       31      Delimiter           ;
7       33      Identifer           FACT
7       37      Delimiter           (
7       38      Delimiter           )
7       39      Delimiter           ;
7       41      Keyword             END
7       44      Delimiter           ;
8       4       Keyword             END
8       7       Delimiter           ;
9       4       Identifer           MULT
9       8       Delimiter           (
9       9       Delimiter           )
9       11      Keyword             IS
9       14      Keyword             BEGIN
10      13      Identifer           ANSWER
10      20      Operator            :=
10      23      Identifer           ANSWER
10      30      Operator            *
10      32      Identifer           J
10      33      Delimiter           ;
11      11      Keyword             END
11      14      Delimiter           ;
12      5       Keyword             BEGIN
13      2       Identifer           ANSWER
13      9       Operator            :=
13      12      Integer             1
13      13      Delimiter           ;
14      2       Identifer           J
14      4       Operator            :=
14      7       Integer             1
14      8       Delimiter           ;
15      2       Identifer           FACT
15      6       Delimiter           (
15      7       Delimiter           )
15      8       Delimiter           ;
16      5       Keyword             END
16      8       Delimiter           ;
17      1       Keyword             BEGIN
18      5       Keyword             WRITE
18      11      Delimiter           (
18      12      String              "The first 5 factorials are (in descending order):"
18      63      Delimiter           )
18      64      Delimiter           ;
19      5       Identifer           I
19      7       Operator            :=
19      10      Integer             5
19      11      Delimiter           ;
20      5       Keyword             LOOP
21      2       Keyword             IF
21      5       Identifer           I
21      7       Operator            <=
21      10      Integer             0
21      12      Keyword             THEN
21      17      Keyword             EXIT
21      21      Delimiter           ;
21      23      Keyword             END
21      26      Delimiter           ;
22      9       Identifer           FACTORIAL
22      18      Delimiter           (
22      19      Delimiter           )
22      20      Delimiter           ;
23      9       Keyword             WRITE
23      14      Delimiter           (
23      15      String              "FACTORIAL("
23      27      Delimiter           ,
23      29      Identifer           I
23      30      Delimiter           ,
23      32      String              ") = "
23      38      Delimiter           ,
23      40      Identifer           ANSWER
23      46      Delimiter           )
23      47      Delimiter           ;
24      2       Identifer           I
24      4       Operator            :=
24      7       Identifer           I
24      9       Operator            -
24      11      Integer             1
24      12      Delimiter           ;
25      5       Keyword             END
25      8       Delimiter           ;
26      1       Keyword             END
26      4       Delimiter           ;

Number of tokens: 120
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           I
2       10      Delimiter           ,
2       12      Identifer           ANSWER
2       19      Delimiter           :
2       21      Identifer           INTEGER
2       29      Operator            :=
2       32      Integer             0
2       33      Delimiter           ;
3       5       Keyword             PROCEDURE
3       15      Identifer           FACTORIAL
3       24      Delimiter           (
3       25      Delimiter           )
3       27      Keyword             IS
4       2       Keyword             VAR
4       6       Identifer           J
4       8       Delimiter           :
4       10      Identifer           INTEGER
4       18      Operator            :=
4       21      Integer             0
4       22      Delimiter           ;
5       2       Keyword             PROCEDURE
6       11      Identifer           FACT
6       15      Delimiter           (
6       16      Delimiter           )
6       18      Keyword             IS
6       21      Keyword             BEGIN
7       6       Keyword             IF
7       9       Identifer           J
7       11      Operator            <=
7       14      Identifer           I
7       16      Keyword             THEN
7       21      Identifer           MULT
7       25      Delimiter           (
7       26      Delimiter           )
7       27      Delimiter           ;
7       29      Identifer           J
7       31      Operator            :=
7       34      Identifer           J
7       36      Operator            +
7       38      Integer             1
7       39      Delimiter           ;
7       41      Identifer           FACT
7       45      Delimiter           (
7       46      Delimiter           )
7       47      Delimiter           ;
7       49      Keyword             END
7       52      Delimiter           ;
8       4       Keyword             END
8       7       Delimiter           ;
9       4       Identifer           MULT
9       8       Delimiter           (
9       9       Delimiter           )
9       11      Keyword             IS
10      6       Keyword             VAR
10      10      Identifer           I
10      12      Delimiter           :
10      14      Identifer           INTEGER
10      22      Operator            :=
10      25      Integer             0
10      26      Delimiter           ;
11      4       Keyword             BEGIN
12      6       Identifer           I
12      8       Operator            :=
12      11      Identifer           ANSWER
12      17      Delimiter           ;
13      13      Identifer           I
13      15      Operator            :=
13      18      Identifer           I
13      20      Operator            *
13      22      Identifer           J
13      23      Delimiter           ;
14      13      Identifer           ANSWER
14      20      Operator            :=
14      23      Identifer           I
14      24      Delimiter           ;
15      4       Keyword             END
15      7       Delimiter           ;
16      5       Keyword             BEGIN
17      2       Identifer           ANSWER
17      9       Operator            :=
17      12      Integer             1
17      13      Delimiter           ;
18      2       Identifer           J
18      4       Operator            :=
18      7       Integer             1
18      8       Delimiter           ;
19      2       Identifer           FACT
19      6       Delimiter           (
19      7       Delimiter           )
19      8       Delimiter           ;
20      5       Keyword             END
20      8       Delimiter           ;
21      1       Keyword             BEGIN
22      5       Keyword             WRITE
22      11      Delimiter           (
22      12      String              "The first 5 factorials are (in ascending order):"
22      62      Delimiter           )
22      63      Delimiter           ;
23      5       Identifer           I
23      7       Operator            :=
23      10      Integer             1
23      11      Delimiter           ;
24      5       Keyword             LOOP
25      2       Keyword             IF
25      5       Identifer           I
25      7       Operator            >
25      9       Integer             5
25      11      Keyword             THEN
25      16      Keyword             EXIT
25      20      Delimiter           ;
25      22      Keyword             END
25      25      Delimiter           ;
26      9       Identifer           FACTORIAL
26      18      Delimiter           (
26      19      Delimiter           )
26      20      Delimiter           ;
27      9       Keyword             WRITE
27      14      Delimiter           (
27      15      String              "FACTORIAL("
27      27      Delimiter           ,
27      29      Identifer           I
27      30      Delimiter           ,
27      32      String              ") = "
27      38      Delimiter           ,
27      40      Identifer           ANSWER
27      46      Delimiter           )
27      47      Delimiter           ;
28      2       Identifer           I
28      4       Operator            :=
28      7       Identifer           I
28      9       Operator            +
28      11      Integer             1
28      12      Delimiter           ;
29      5       Keyword             END
29      8       Delimiter           ;
30      1       Keyword             END
30      4       Delimiter           ;

Number of tokens: 140
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Comment             (* valid integer *)
2       1       Integer             11111111
4       1       Comment             (* an out of range integer *)
5       1       Invalid             ERROR: Integer out of range: 11111111111111111111
7       1       Comment             (* an very large real -- still acceptable though *)
8       1       Real                123456789012345678901234567890.0
10      1       Comment             (* a valid string*)
11      1       String              "abcdefg"
13      1       Comment             (* an invalid string with tab in it *)
14      1       Invalid             ERROR: String contains tab: "abcde	g"
16      1       Comment             (* an invalid string with many tabs in it *)
17      1       Invalid             ERROR: String contains tab: "abcde			g"
19      1       Comment             (* an ok string *)
20      1       String              "123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345"
22      1       Comment             (* an overly long string *)
23      1       Invalid             ERROR: String is longer than 255: "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456"
25      1       Comment             (* another ok string *)
26      1       String              ""
28      1       Comment             (* another ok string *)
29      1       String              "(*"
31      1       Comment             (* an ok identifier *)
32      1       Identifer           x12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234
34      1       Comment             (* an overly long identifier *)
35      1       Invalid             ERROR: Identifier is longer than 255: x123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345
37      1       Comment             (* an ok line *)
38      1       Identifer           if
38      4       Identifer           x
38      5       Operator            <
38      6       Integer             7
38      7       Identifer           then
38      12      Identifer           y
38      13      Operator            :=
38      15      Identifer           y
38      16      Operator            +
38      17      Integer             17
40      1       Comment             (* should lex as two tokens *)
41      1       Real                123.
41      5       Identifer           x
43      1       Comment             (* a bad character (bell) *)
44      1       Invalid             ERROR: Bad character: 
46      1       Identifer           xx
46      3       Comment             (* an ok comment with an embedded	tab 
and cr *)
47      10      Identifer           yy
49      1       Comment             (* an unterminated string *)
50      1       Invalid             ERROR: Unterminated string: "abc

52      1       Comment             (* an unterminated string *)
53      1       Invalid             ERROR: Unterminated string: "abc(**)

55      1       Comment             (* an unterminated string *)
56      1       Invalid             ERROR: Unterminated string: "abc(*123*)

58      1       Comment             (* a terminated string *)
59      1       String              "abc(*abcabcc*)"
61      1       Comment             (* difficult cases: valid *)
62      1       Comment             (*************)
64      1       Comment             (* difficult cases: valid *)
65      1       Comment             (*******(*****(*)
67      1       Comment             (* difficult cases: valid *)
68      1       Comment             (*123***123213**21****)
70      1       Comment             (* difficult cases: valid *)
71      1       Comment             (*""*)
73      1       Comment             (* difficult cases: an unterminated comment *)
74      1       Invalid             ERROR: Unterminated comment: 
Number of tokens: 31
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           i
2       10      Delimiter           ,
2       12      Identifer           j
2       14      Delimiter           :
2       16      Identifer           INTEGER
2       24      Operator            :=
2       27      Integer             1
2       28      Delimiter           ;
3       5       Keyword             VAR
3       9       Identifer           x
3       11      Delimiter           :
3       13      Identifer           REAL
3       18      Operator            :=
3       21      Real                2.0
3       24      Delimiter           ;
4       5       Keyword             VAR
4       9       Identifer           y
4       11      Delimiter           :
4       13      Identifer           REAL
4       18      Operator            :=
4       21      Real                3.0
4       24      Delimiter           ;
5       1       Keyword             BEGIN
6       5       Keyword             WRITE
6       11      Delimiter           (
6       12      String              "i = "
6       18      Delimiter           ,
6       20      Identifer           i
6       21      Delimiter           ,
6       23      String              ", j = "
6       31      Delimiter           ,
6       33      Identifer           j
6       34      Delimiter           )
7       5       Keyword             WRITE
7       11      Delimiter           (
7       12      String              "x = "
7       18      Delimiter           ,
7       20      Identifer           x
7       21      Delimiter           ,
7       23      String              ", y = "
7       31      Delimiter           ,
7       33      Identifer           y
7       34      Delimiter           )
7       35      Delimiter           ;
8       1       Keyword             END
8       4       Delimiter           ;

Number of tokens: 49
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             VAR
2       9       Identifer           i
2       10      Delimiter           ,
2       12      Identifer           j
2       14      Delimiter           :
2       16      Identifer           INTEGER
2       24      Operator            :=
2       27      Integer             1
2       28      Delimiter           ;
3       5       Keyword             VAR
3       9       Identifer           x
3       11      Delimiter           :
3       13      Identifer           REAL
3       18      Operator            :=
3       21      Real                2.0
3       24      Delimiter           .
3       25      Delimiter           ;
4       5       Keyword             VAR
4       9       Identifer           y
4       11      Delimiter           :
4       13      Identifer           REAL
4       18      Operator            :=
4       21      Real                3.0
4       24      Delimiter           ;
5       1       Keyword             BEGIN
6       5       Keyword             WRITE
6       11      Delimiter           (
6       12      String              "i = "
6       18      Delimiter           ,
6       20      Identifer           i
6       21      Delimiter           ,
6       23      String              ", j = "
6       31      Delimiter           ,
6       33      Identifer           j
6       34      Delimiter           )
7       5       Keyword             WRITE
7       11      Delimiter           (
7       12      String              "x = "
7       18      Delimiter           ,
7       20      Identifer           x
7       21      Delimiter           ,
7       23      String              ", y = "
7       31      Delimiter           ,
7       33      Identifer           y
7       34      Delimiter           )
7       35      Delimiter           ;
8       1       Keyword             END
8       4       Delimiter           ;

Number of tokens: 50
ROW     COL     TYPE                TOKEN/ERROR MESSAGE 
1       1       Keyword             PROGRAM
1       9       Keyword             IS
2       5       Keyword             PROCEDURE
2       15      Identifer           FOO
2       18      Delimiter           (
2       19      Identifer           X
2       20      Delimiter           :
2       22      Identifer           INT
2       25      Delimiter           ;
2       27      Identifer           Y
2       28      Delimiter           :
2       30      Identifer           REAL
2       34      Delimiter           )
2       35      Delimiter           :
2       36      Identifer           REAL
3       7       Keyword             PROCEDURE
3       17      Identifer           BAR
3       20      Delimiter           (
3       21      Delimiter           )
3       23      Keyword             IS
3       26      Keyword             BEGIN
3       32      Identifer           Y
3       34      Operator            :=
3       37      Identifer           X
3       39      Operator            +
3       41      Real                1.0
3       44      Delimiter           ;
3       46      Keyword             END
3       49      Delimiter           ;
4       7       Keyword             BEGIN
5       9       Identifer           BAR
5       12      Delimiter           (
5       13      Delimiter           )
5       14      Delimiter           ;
6       2       Keyword             RETURN
6       9       Identifer           Y
6       10      Delimiter           ;
7       7       Keyword             END
7       10      Delimiter           ;
8       5       Keyword             VAR
8       9       Identifer           C
8       11      Delimiter           :
8       13      Identifer           REAL
8       18      Operator            :=
8       21      Integer             0
8       22      Delimiter           ;
9       1       Keyword             BEGIN
10      5       Identifer           C
10      7       Operator            :=
10      10      Identifer           FOO
10      13      Delimiter           (
10      14      Integer             3
10      15      Delimiter           ,
10      17      Real                2.0
10      20      Delimiter           )
10      21      Delimiter           ;
11      5       Keyword             WRITE
11      10      Delimiter           (
11      11      String              "C = "
11      17      Delimiter           ,
11      19      Identifer           C
11      20      Delimiter           ,
11      22      String              " (should be 4.0)"
11      40      Delimiter           )
11      41      Delimiter           ;
12      1       Keyword             END
12      4       Delimiter           ;

Number of tokens: 67
